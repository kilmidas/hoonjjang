@charset "utf-8";

/*_mixin.scss */

@mixin loading_animation() {
  $total: 12;
  $rotate : 30;
  $sec : 1.2s;

  @-webkit-keyframes circleFadeDelay {
    0%, 39%, 100% { opacity: 0; }
    40% { opacity: 1; }
  }
  @keyframes circleFadeDelay {
    0%, 39%, 100% { opacity: 0; }
    40% { opacity: 1; } 
  }
  .circle_inner {
    -webkit-animation: circleFadeDelay #{$sec} infinite ease-in-out both;
    animation: circleFadeDelay #{$sec} infinite ease-in-out both;
  }
  @for $i from 1 through $total {
    &#{$i} {
      @include transform(rotate(#{$i*$rotate}deg));
    }
   &#{$i} .circle_inner {
    -webkit-animation-delay: #{-($sec - 0.1 * ($i - 1))};
    animation-delay: #{-($sec - 0.1 * ($i - 1))};
    }
  }
}

@mixin box-sizing($type:border-box) {
  -webkit-box-sizing:$type;
  -moz-box-sizing:$type;
  -o-box-sizing:$type;
  -ms-box-sizing:$type;
  box-sizing: $type;
}

@mixin border-radius($radius) {
  -webkit-border-radius:$radius;
  -moz-border-radius:$radius;
  -ms-border-radius:$radius;
  border-radius:$radius;
}

@mixin pseudo_img($value, $sp) {
      display: inline-block;
      content: '';

      @include get-sprite($value, $sp);
}

@mixin opacity($value) {
    -webkit-opacity: $value;
    -moz-opacity: $value;
    filter:alpha(opacity=$value*100);
    opacity: $value; 
}

@mixin thum_box($width:58px, $height:58px, $color:#d9d9d9)  {
    position: relative;
    line-height: 0;

    &:after {
      display: block;
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: $width;
      height: $height;
      border: 1px solid $color;
    }
}

@mixin bottom_height($height:14px){
  &:after {
    height: $height;
    overflow: hidden;
    display: block;
    content: '';
  }
}

@mixin ellipsis {
  overflow:hidden;
  white-space:nowrap;
  text-overflow:ellipsis
}

@mixin ellipsisMulti($line:2) {
  display: -webkit-box;
  overflow:hidden;
  white-space: normal;
  word-break:break-word;
  text-overflow: ellipsis;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;   
}

@mixin clearfix {
    zoom: 1;
    
    &:after {
      content: '';
      display: block;
      clear: both;
  }
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

//transition
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

//user-select
@mixin user-select($select) {
  -moz-user-select: -moz-#{$select};
  -khtml-user-select: $select;
  -webkit-user-select: $select;
  -o-user-select: $select;
  user-select: $select;
}

//font-smoothing
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}